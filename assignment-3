1. File Handling:
Write a Python program that opens a file and prints its contents line by line.
How do you handle reading a file when the file does not exist in Python?
Write a Python program that appends a new line of text to an existing file.
How would you read a large file efficiently without loading it entirely into memory?
Create a Python program that counts the number of characters in a file.
How can you write a list of strings into a text file in Python?
Write a Python program that reads a file and replaces all occurrences of a specific word.
How do you check whether a file is empty in Python?
Write a program that reads a CSV file and prints the contents in a structured format.
What is the purpose of the with statement in file handling in Python, and how does it help in resource management?
2. Exception Handling:
Write a Python program that catches and handles ZeroDivisionError.
How would you handle multiple exceptions with a single try...except block in Python?
Explain the difference between try...except and try...finally in Python exception handling.
Write a Python program that raises a custom exception when an invalid age is entered.
How can you log exception details (e.g., traceback) when an exception occurs in Python?
What is the purpose of the else block in Python's exception handling? Demonstrate with an example.
Write a Python program to handle a FileNotFoundError when attempting to read a non-existing file.
How do you handle exceptions in a function that accepts user input and performs arithmetic operations?
What is the significance of exception chaining in Python, and how do you implement it?
Write a Python program that catches and prints the exception message when an invalid input type is provided.
3. OOP - Class & Object, Instance Variable & Function:
Write a Python class to represent a Rectangle with methods to calculate its area and perimeter.
Explain the role of the self parameter in a class method. Provide an example.
How do you create an object of a class in Python, and how do you access its instance variables?
Write a Python program that defines a Person class with attributes like name and age and a method to display them.
What is the difference between instance methods and class methods in Python? Provide examples.
How can you define a constructor (__init__) method in Python? Demonstrate with a Car class example.
Write a Python program to change an instance variable of an object after it is created.
What is the purpose of the __str__ method in a Python class? Provide an example.
Write a Python program to implement a class that represents a BankAccount with methods to deposit and withdraw money.
How would you define getter and setter methods in Python for instance variables?
4. OOP - Inheritance, Abstract Class:
Write a Python program to demonstrate single inheritance by creating a Dog class that inherits from an Animal class.
What is method overriding in Python? Provide an example using a base class and a derived class.
How do you define an abstract class in Python, and what is the purpose of the abc module? Demonstrate with an example.
Write a Python program to demonstrate multiple inheritance where a class inherits from two base classes.
Explain the concept of polymorphism in Python with an example.
Write a Python program that defines an abstract class Shape and two subclasses Circle and Rectangle that implement an area method.
What is the difference between an abstract class and an interface in Python? Provide an example of each.
Write a Python program to demonstrate the use of super() in inheritance.
Explain how constructors work in inheritance. Write a Python program that uses inheritance with constructors in both base and derived classes.
Write a Python program to demonstrate the use of an abstract method in a base class that forces the derived classes to implement it.
